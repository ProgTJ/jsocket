0.5.0 (beta3):

- Renamed package to jsocket.*
- Added support for UDP connections
    - Using same hierarchy system as with TCP

0.5.0 (beta2):

- Made StringSocket a subtype of Socket and ObjectSocket a subtype of StringSocket
   - Eliminates casting to access config methods in Socket
- Added sub package .cipher.*
   - Contains sub packages .aes.* and .rsa.*
      - These are algorithms used for cryptographic use cases
   - Using hierarchy to allow for the addition of cryptographic algorithms
      - AES and RSA are subtypes
      - More algorithms can be added, or custom implementations can be used
   - Package will act as an external service to the sockets
- Added new runtime exceptions to .exceptions.*

0.5.0 (beta1):

- Restructured entire package
   - Completely new implementation
   - New package hierarchy
      jsocket
         .exceptions.*
         .socket.*
         .util.*
- New API
   - Defined interfaces for custom implementation
- Uses Java style guide standard
- Cryptographic services have ben left to the next beta version

0.5.0 (vNext outline):

- These are the goals of vNext
   - Overhauling entire package
      - Changing package structure
      - Using more of an API approach
         - Previous versions used Gson as JSON SerDe. This version will provide a SerDe service that uses any serialization method
         - Different Socket abstractions provide interface to use a custom implementation
         - Custom exceptions
            - Default implementations of all API will throw Runtime exceptions. This allows custom implementations the freedom to use any exception or none
         - Encryption improvements
            - Interfaces will be provided to use custom implementation
            - Hierarchy will be used to allow for potentially more algorithms to be used
            - Supporting both RSA and AES to start
            - Implemented as an external service
      - Package will be more efficient
      - Adding UDP support
        - Abstractions for UDP connections will be added to this library
   - More strictly following Java standard for code style
      - Previous versions used C# styling

0.4.2:

- Switched to MIT License
- Removed functionality of FileTransferSockey until bugs can be worked out
- Deprecated StringTool for FunctionTool
   - Maintaining backwards compatibility
   - Lambda expressions can be used with MessageSocket class to create custom filtering functions
      - A predefined function for removing null bits is currently available
- Refactored JSON parser to separate class (JsonTool)
   - Developer can serialize and deserialize outside of ObjectSocket

0.4.1 (unstable):

- Improved protocol of FileTransferSocket
- License is correct for each file
- Switched encryption to RSA for asymmetric encryption
   - Give it a value of 1024, 2048, or 4096 to generate key pairs (next version will use enum to specify length)

0.4.0 (unstable):

- Restructered packages
   - Made jsock root package. Structure as follows:
      - jsock.crypto: Contains Cryptographic classes: AES
      - jsock.enums: Contains enum and static class to be utilized internally: StringCleanType, TransferType
      - jsock.net: Contains main classes: JSocket, MessageSocket, ObjectSocket
      - jsock.net.ftp: Contains class to handle file transferring: FileTransferSocket
      - jsock.util: Utility classes, mostly used internally: ByteChecker, StringCleaner
   - JSocket can be set to be an encrypted connection, affects all subclasses
   - FileTransferSocket will checksum bytes to ensure success
   - Refactored code

0.3.1:

- Fixed bug with sending large file

0.3.0 (stable):

- Merged into main package
- Fixed bugs, successfully sends and receives files

0.3.0 (unstable):

- Added GNU General Public License
- Added FileTransferSocket to package
- Changed JSocket.recv_all(size) to read in chunks
- Added method to send large byte array to JSocket
- Added method to send large message tp MessageSocket

0.2.0:

- Added ObjectSocket to package
- Fixed JavaDocs

0.1.1:

- Included JSocket and MessageSocket class
- Bugs of previous build were fixed
   
